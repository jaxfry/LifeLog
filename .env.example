# LifeLog Example Environment File (.env.example)
#
# Quick Start:
# 1. Copy this file to `.env` in the project root.
# 2. Fill in the required values (see comments below).
# 3. For most local development, defaults will work. For Docker Compose, use the provided docker-compose.yml.
#
# --- AI / Gemini (Required for AI features) ---
# Get your Gemini API key from Google AI Studio or your admin.
GEMINI_API_KEY=your_gemini_api_key_here

# --- Frontend (Required for frontend to connect to API) ---
# The base URL for the API. Usually http://localhost:8000 for local dev.
VITE_API_BASE=http://localhost:8000

# --- Database (Required for all backend services) ---
# Full database connection URL (used by some services)
DATABASE_URL=postgresql+asyncpg://lifelog:lifelogpassword@localhost:5432/lifelog
# Individual DB connection parts (used by others)
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_USER=lifelog
POSTGRES_PASSWORD=lifelogpassword
POSTGRES_DB=lifelog

# --- RabbitMQ (Required for event processing) ---
# Main RabbitMQ connection (used by API, ingestion, processing)
RABBITMQ_HOST=localhost
RABBITMQ_PORT=5672
RABBITMQ_USER=user
RABBITMQ_PASS=password
RABBITMQ_QUEUE=lifelog_events_queue
# (Optional) Processing queue for batch jobs
RABBITMQ_PROCESSING_QUEUE=lifelog_processing_queue

# --- Service-specific overrides (Advanced: only if running services outside Docker Compose) ---
# These are rarely needed unless you run services manually, not with docker-compose.
# Uncomment and set these ONLY if you know you need to override defaults for manual/advanced setups.
#INGESTION_RABBITMQ_HOST=localhost
#INGESTION_RABBITMQ_PORT=5672
#PROCESSING_RABBITMQ_HOST=localhost
#PROCESSING_RABBITMQ_PORT=5672
#PROCESSING_POSTGRES_HOST=localhost
#PROCESSING_POSTGRES_USER=lifelog
#PROCESSING_POSTGRES_PASSWORD=lifelogpassword
#PROCESSING_POSTGRES_DB=lifelog
#PROCESSING_POSTGRES_PORT=5432

# --- API Service (Required for authentication and security) ---
# Secret key for JWTs and security (change for production!)
SECRET_KEY=your-super-secret-key-that-is-long-and-random
# Enable debug mode (true/false)
DEBUG=false
# Allowed CORS origins (comma-separated, e.g. http://localhost:5173)
ALLOWED_ORIGINS=http://localhost:5173
# Single-user credentials (for API auth)
LIFELOG_USERNAME=admin
LIFELOG_PASSWORD=your_secure_password_here

# --- Notes ---
# - For most local development, you only need to set GEMINI_API_KEY, SECRET_KEY, and LIFELOG_USERNAME/LIFELOG_PASSWORD.
# - If you use Docker Compose, most variables are set automatically.
# - Only override service-specific variables if you know you need to.
# - See the README for more details and troubleshooting.